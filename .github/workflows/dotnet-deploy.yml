name: .NET Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
                
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
        
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
        
    - name: Restore dependencies
      run: dotnet restore ./Backend/WebAPI
      
    - name: Test
      run: dotnet test ./Backend/Tests --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
    
        
    - name: Restore dependencies
      run: dotnet restore .Backend/WebAPI
      
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        dotnet build ./Backend/WebAPI --configuration Release --no-restore
    
  deploy:
    needs: build
    runs-on: windows-latest
    environment:
      name: 'Production'

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x 

    - name: Publish
      run: dotnet publish Backend/WebAPI --configuration Release -o Releases
    
    - name: Deploy
      uses: azure/webapps-deploy@v2
      with:
        app-name: CloudCure
        publish-profile: ${{secrets.AZURE_CLOUDCURE_API_PUBLISH_PROFILE}}
        package: Releases
